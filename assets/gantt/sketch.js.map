{"version":3,"sources":["webpack://air/webpack/universalModuleDefinition","webpack://air/webpack/bootstrap","webpack://air/webpack/runtime/define property getters","webpack://air/webpack/runtime/hasOwnProperty shorthand","webpack://air/webpack/runtime/make namespace object","webpack://air/./src/renderable/Bar.js","webpack://air/./src/renderable/Drag.js","webpack://air/./src/renderable/GridTask.js","webpack://air/./src/renderable/GridDay.js","webpack://air/./src/renderable/Now.js","webpack://air/./src/util/getTimelineTicks.js","webpack://air/./src/getStore.js","webpack://air/./src/index.js","webpack://air/./src/initSubscriber.js","webpack://air/./src/initClick.js"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","grender","extend","Renderable","_constructor","params","this","x","y","width","height","radius","completeOffset","borderColor","fillColor","name","updateComplete","nowX","draw","ctx","realX","realY","realWidth","lineWidth","realHeight","path","Path2D","rect","moveTo","arcTo","lineTo","closePath","strokeStyle","stroke","fillStyle","fill","save","clip","finishedPrecent","Math","round","beginPath","restore","drawText","padding","context","t","w","fontSize","chr","split","temp","row","lineHeight","font","textAlign","textBaseline","a","length","measureText","push","b","fillText","size","color","dir","arc","PI","window","devicePixelRatio","translate","index","heightOfSingleTask","canvas","trackCount","date","restColor","pixelOfEveryBlock","toTick","getTime","getFullYear","getMonth","getDate","getHours","getMinutes","getDay","toDayName","day","getRandomStr","random","toString","slice","Gantt","opts","store","project","menuWidth","planeType","millisecondOfEveryBlock","heightOfDate","tracks","schedule","map","task","taskName","title","uid","childrenUID","queue","queueTask","startTime","Date","endTime","nowDate","getTrackByUID","track","i","updateAGHeight","ag","setStyleSize","ganttWidth","rendererManager","children","setAttrSize","reRender","updateGridTasks","projectStartDate","gridTasks","bars","trackIndex","gridTask","GridTask","forEach","startGridDayIndex","endGridDayIndex","bar","Bar","userData","isCreated","trackUID","refreshTimeline","renderers","now","scene","initGridDays","gridDays","timelineTicks","ticks","gridDay","GridDay","offsetX","Now","initNowTimeLine","setInterval","addTrack","splice","deleteTrack","count","deletedTrackUID","filter","updateTaskName","getIndexByTaskEl","topTaskListEl","taskEl","subTaskListEl","j","getBarsByTrackUID","updateTaskList","AppEl","getElementsByClassName","taskCount","dataset","allTaskCount","html","trackTotalMillisecond","unit","innerHTML","editQueueTaskName","oldName","prompt","toJSON","toLocaleString","type","millisecondOfEveryTicks","startDate","ticksCount","setMilliseconds","timeFormats","timestamp","fullYear","month","hour","minute","dayName","pop","getTimelineTicks","getStore","document","createElement","classList","add","style","el","appendChild","onSave","onPrint","MenuEl","menuHTML","GanttWrapEl","dateEl","formatDate","wrapName","blockName","GanttEl","Grender","element","DPR","addRenderer","activeGrid","drag","subscribers","gridDayWhenTouchStart","gridTaskWhenTouchStart","drawingBar","lastGridDay","isMoved","isBlocked","event","originEvent","getElementsContainPoint","selectedBar","selectedBarStartIndex","selectDrag","allSelectDrag","touchmove","startDateGrid","endDateGrid","newName","dragSize","parseInt","startDrag","Drag","endDrag","getSubscriber","subscribe","initSubscriber","funcList","createTask","parentNode","deleteTask","subTaskCount","removeChild","createSubTask","parentTaskEl","TaskListEl","parentTaskElIndex","lastTaskEl","deleteSubTask","taskListEl","parentTaskIndex","taskIndex","editTaskName","originTaskName","innerText","printProject","getContext","fillRect","drawImage","aEl","setAttribute","toDataURL","click","img","Image","saveProject","addEventListener","e","target","func","clickFunc","initClick","scrollWidth","timelineX","ganttViewportWidth","innerWidth","scrollLeft","version","author","destroy"],"mappings":"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","file":"static/sketch.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"air\"] = factory();\n\telse\n\t\troot[\"air\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default grender.extend(grender.Renderable, {\n  _constructor: function (params) {\n    this.x = params.x || 0;\n    this.y = params.y || 0;\n    this.width = params.width || 0;\n    this.height = +params.height || 0;\n    this.radius = 6;\n    this.completeOffset = 0;\n    this.borderColor;\n    this.fillColor;\n    this.name = params.name || \"\";\n  },\n  updateComplete(nowX) {\n    this.completeOffset = nowX - this.x;\n  },\n  draw(ctx) {\n    const lineWidth = 4;\n    const realX = this.x + lineWidth;\n    const realY = this.y + lineWidth;\n    const realWidth = this.width - lineWidth * 2;\n    const realHeight = this.height - lineWidth * 2;\n\n    this.path = new Path2D();\n    this.path.rect(realX, this.y, this.width, this.height);\n\n    const radius = this.radius;\n\n    const path = new Path2D();\n    path.moveTo(realX, realY + radius);\n    path.arcTo(realX, realY, realX + radius, realY, radius);\n    path.lineTo(realX + realWidth - radius, realY);\n    path.arcTo(\n      realX + realWidth,\n      realY,\n      realX + realWidth,\n      realY + radius,\n      radius\n    );\n    path.lineTo(realX + realWidth, this.y + realHeight - radius);\n    path.arcTo(\n      realX + realWidth,\n      this.y + realHeight,\n      realX + realWidth - radius,\n      this.y + realHeight,\n      radius\n    );\n    path.lineTo(realX + radius, this.y + realHeight);\n    path.arcTo(\n      realX,\n      this.y + realHeight,\n      realX,\n      this.y + realHeight - radius,\n      radius\n    );\n    path.closePath();\n    if (this.completeOffset > this.width) {\n      ctx.strokeStyle = \"hsl(150, 90%, 30%)\";\n      this.borderColor = \"hsl(150, 90%, 30%)\";\n    } else {\n      ctx.strokeStyle = \"hsl(204, 90%, 40%)\";\n      this.borderColor = \"hsl(204, 90%, 40%)\";\n    }\n    ctx.lineWidth = lineWidth;\n    ctx.stroke(path);\n    ctx.fillStyle = \"hsl(204, 90%, 90%)\";\n\n    ctx.fill(path);\n\n    ctx.save();\n    ctx.clip(path);\n\n    /**\n     * 百分比\n     */\n    let finishedPrecent = \"\";\n\n    if (this.completeOffset > this.width) {\n      ctx.fillStyle = \"hsl(150, 70%, 50%)\";\n      this.fillColor = \"hsl(150, 70%, 50%)\";\n    } else {\n      ctx.fillStyle = \"hsl(204, 90%, 70%)\";\n      this.fillColor = \"hsl(204, 90%, 70%)\";\n      if (this.completeOffset > 0) {\n        finishedPrecent = `[${Math.round(\n          (this.completeOffset / this.width) * 100\n        )}%]`;\n      }\n    }\n\n    ctx.beginPath();\n    ctx.rect(this.x, this.y, this.completeOffset, this.height);\n    ctx.fill();\n    ctx.restore();\n\n    const padding = 5;\n\n    ctx.save();\n    const fontSize = 15;\n    this.drawText(\n      ctx,\n      `${this.name} ${finishedPrecent}`,\n      realX + padding,\n      this.y + padding,\n      realWidth - padding * 4,\n      fontSize\n    );\n    ctx.restore();\n  },\n\n  drawText(context, t, x, y, w, fontSize) {\n    context.save();\n    var chr = t.split(\"\");\n    var temp = \"\";\n    var row = [];\n    const lineHeight = fontSize * 1.25;\n\n    context.font = `${fontSize}px san-serif`;\n    context.fillStyle = \"black\";\n    context.textAlign = \"left\";\n    context.textBaseline = \"middle\";\n\n    for (var a = 0; a < chr.length; a++) {\n      if (context.measureText(temp).width > w || chr[a] === \"/\") {\n        row.push(temp);\n        temp = \"\";\n      }\n      if (chr[a] !== \"/\") {\n        temp += chr[a];\n      }\n    }\n\n    row.push(temp);\n\n    for (var b = 0; b < row.length; b++) {\n      context.fillText(row[b], x, -lineHeight / 4 + y + (b + 1) * lineHeight);\n    }\n    context.restore();\n  },\n});\n","export default grender.extend(grender.Renderable, {\n  _constructor: function (params) {\n    this.x = params.x || 0;\n    this.y = params.y || 0;\n    this.size = 10;\n    this.color = params.color || '#111';\n    this.dir = params.dir;\n  },\n  draw(ctx) {\n    this.path = new Path2D();\n    this.path.arc(this.x, this.y, this.size, 0, Math.PI * 2, true);\n\n    ctx.strokeStyle = this.color;\n    ctx.fillStyle = '#fff';\n    ctx.lineWidth = window.devicePixelRatio;\n    ctx.fill(this.path);\n    ctx.stroke(this.path);\n\n    ctx.save();\n    ctx.translate(this.x, this.y);\n    ctx.beginPath();\n    if (this.dir == 'left') {\n      ctx.moveTo(-this.size / 1.6, 0);\n      ctx.lineTo(this.size / 2.6, -this.size / 1.8);\n      ctx.lineTo(this.size / 2.6, this.size / 1.8);\n    } else if (this.dir == 'right') {\n      ctx.moveTo(this.size / 1.6, 0);\n      ctx.lineTo(-this.size / 2.6, this.size / 1.8);\n      ctx.lineTo(-this.size / 2.6, -this.size / 1.8);\n    }\n    ctx.closePath();\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.restore();\n  }\n})","const GridTasks = grender.extend(grender.Renderable, {\n  _constructor: function (params) {\n    this.path = new Path2D();\n    this.index = params.index || 0;\n    this.heightOfSingleTask = params.heightOfSingleTask;\n    this.fillColor = 'hsla(0, 0%, 0%, .04)';\n  },\n  draw: function (ctx) {\n    this.path = new Path2D();\n    this.path.rect(0, this.heightOfSingleTask * this.index, ctx.canvas.width, this.heightOfSingleTask);\n\n    const path = new Path2D();\n    path.rect(0, this.heightOfSingleTask * this.index, ctx.canvas.width, this.heightOfSingleTask - 2);\n\n    if (this.trackCount < 1) return;\n    ctx.save();\n    ctx.fillStyle = this.fillColor;\n    ctx.fill(path);\n    ctx.restore();\n  }\n});\nexport default GridTasks;","const GridDays = grender.extend(grender.Renderable, {\n  _constructor: function (params) {\n    this.path = new Path2D();\n    this.date = params.date || {};\n    this.fillColor = params.fillColor || \"#f8f8f8\";\n    this.restColor = params.restColor || \"#eee\";\n    this.pixelOfEveryBlock = params.pixelOfEveryBlock || 0;\n    this.index = params.index || 0;\n  },\n  draw: function (ctx) {\n    this.path = new Path2D();\n    this.path.rect(\n      this.pixelOfEveryBlock * this.index,\n      0,\n      this.pixelOfEveryBlock,\n      ctx.canvas.height\n    );\n    const path = new Path2D();\n    path.rect(\n      this.pixelOfEveryBlock * this.index,\n      0,\n      this.pixelOfEveryBlock - window.devicePixelRatio,\n      ctx.canvas.height\n    );\n    ctx.save();\n    ctx.fillStyle = this.fillColor;\n    ctx.fill(path);\n    ctx.restore();\n  },\n});\nexport default GridDays;\n","export default grender.extend(grender.Renderable, {\n  _constructor: function (params) {\n    this.x = params.x || 0;\n  },\n  draw(ctx) {\n    const path = new Path2D();\n    path.moveTo(this.x, 0);\n    path.lineTo(this.x, ctx.canvas.height);\n\n    ctx.save();\n    // 绘制线\n    ctx.strokeStyle = 'hsl(0, 90%, 50%)';\n    ctx.lineWidth = window.devicePixelRatio;\n    ctx.stroke(path);\n    ctx.restore();\n  }\n})","export default function (opts) {\n  const { startTime, endTime, type, millisecondOfEveryTicks } = opts;\n\n  const startDate = new Date(startTime);\n  const endDate = new Date(endTime);\n\n  const millisecondOfTimeRange = endDate - startDate;\n  const ticksCount = millisecondOfTimeRange / millisecondOfEveryTicks;\n\n  const ticks = [toTick(startDate)];\n\n  for (let index = 0; index < ticksCount; index++) {\n    startDate.setMilliseconds(millisecondOfEveryTicks);\n    ticks.push(toTick(startDate));\n  }\n\n  let timelineTicks = {\n    ticks: [],\n    timeFormats: [],\n  };\n\n  switch (type) {\n    case \"day\":\n      for (let tick of ticks) {\n        const [timestamp, fullYear, month, day, hour, minute] = tick;\n        const key = `${fullYear}/${month}/${day} ${hour}时`;\n        timelineTicks.ticks.push(new Date(timestamp));\n        if (!timelineTicks.timeFormats[key]) {\n          timelineTicks.timeFormats[key] = [[`${minute}分`, timestamp]];\n        } else {\n          timelineTicks.timeFormats[key].push([`${minute}分`, timestamp]);\n        }\n      }\n      break;\n    case \"week\":\n      for (let tick of ticks) {\n        const [timestamp, fullYear, month, date, hour, minuts, day] = tick;\n        const dayName = toDayName(day);\n        const key = `${fullYear}/${month}/${date} ${dayName}`;\n        timelineTicks.ticks.push(new Date(timestamp));\n        if (!timelineTicks.timeFormats[key]) {\n          timelineTicks.timeFormats[key] = [[`${hour}点`, timestamp]];\n        } else {\n          timelineTicks.timeFormats[key].push([`${hour}点`, timestamp]);\n        }\n      }\n      break;\n    case \"month\":\n      for (let tick of ticks) {\n        const [timestamp, fullYear, month, date, hour, minuts, day] = tick;\n        const dayName = toDayName(day);\n        const key = `${fullYear}/${month}/${date} ${dayName}`;\n        timelineTicks.ticks.push(new Date(timestamp));\n        if (!timelineTicks.timeFormats[key]) {\n          timelineTicks.timeFormats[key] = [[`${hour}点`, timestamp]];\n        } else {\n          timelineTicks.timeFormats[key].push([`${hour}点`, timestamp]);\n        }\n      }\n      break;\n    case \"year\":\n      for (let tick of ticks) {\n        const [timestamp, fullYear, month, date, hour, minuts, day] = tick;\n        const key = `${fullYear}年${month}月`;\n        timelineTicks.ticks.push(new Date(timestamp));\n        if (!timelineTicks.timeFormats[key]) {\n          timelineTicks.timeFormats[key] = [[`${date}日`, timestamp]];\n        } else {\n          timelineTicks.timeFormats[key].push([`${date}日`, timestamp]);\n        }\n      }\n      break;\n  }\n\n  /**\n   * 过滤掉只包含一个最小单元的情况\n   */\n  for (let i in timelineTicks.timeFormats) {\n    if (timelineTicks.timeFormats[i].length <= 1) {\n      delete timelineTicks.timeFormats[i];\n      timelineTicks.ticks.pop();\n    }\n  }\n\n  return timelineTicks;\n}\n\n/**\n * 返回数组各元素分别表示：日期对象/年/月/日/时/分\n * @param {Date} date\n * @returns [2022, 7, 2, 8, 0]\n */\nfunction toTick(date) {\n  return [\n    date.getTime(),\n    date.getFullYear(),\n    date.getMonth() + 1,\n    date.getDate(),\n    date.getHours(),\n    date.getMinutes(),\n    date.getDay(),\n  ];\n}\n\nfunction toDayName(day) {\n  switch (day) {\n    case 0:\n      return \"周日\";\n    case 1:\n      return \"周一\";\n    case 2:\n      return \"周二\";\n    case 3:\n      return \"周三\";\n    case 4:\n      return \"周四\";\n    case 5:\n      return \"周五\";\n    case 6:\n      return \"周六\";\n  }\n}\n","import GridTask from \"./renderable/GridTask\";\nimport GridDay from \"./renderable/GridDay\";\nimport Now from \"./renderable/Now\";\nimport Bar from \"./renderable/Bar\";\nimport getTimelineTicks from \"./util/getTimelineTicks\";\n\nfunction getRandomStr() {\n  return Math.random().toString(32).slice(2, -1);\n}\n\nexport default function (project) {\n  const store = {\n    /**\n     * 侧边栏宽度\n     */\n    menuWidth: 350,\n\n    /**\n     * 最小时间单元的宽度\n     */\n    pixelOfEveryBlock:\n      project[\"unit-width\"] ||\n      (function () {\n        const { planeType } = project;\n        switch (planeType) {\n          case \"day\":\n            return 40;\n          case \"week\":\n            return 40;\n          case \"month\":\n            return 70;\n          case \"year\":\n            return 30;\n        }\n      })(),\n\n    /**\n     * 最小时间单元表示的时间范围\n     * 单位：毫秒ms\n     */\n    millisecondOfEveryBlock: (function () {\n      const { planeType } = project;\n      switch (planeType) {\n        /**\n         * 日计划\n         * 时：分\n         * 最小单元表示 10 分钟\n         */\n        case \"day\":\n          return 10 * 60 * 1000;\n        /**\n         * 周计划\n         * 日：时\n         * 最小单位表示 6 小时\n         */\n        case \"week\":\n          return 6 * 60 * 60 * 1000;\n        /**\n         * 月计划\n         * 日：时\n         * 最小单位表示 12 小时\n         */\n        case \"month\":\n          return 12 * 60 * 60 * 1000;\n        /**\n         * 年计划\n         * 月：日\n         * 最小单位 5 日\n         */\n        case \"year\":\n          return 2 * 24 * 60 * 60 * 1000;\n      }\n    })(),\n\n    // 每个任务的高度\n    heightOfSingleTask: project.height || 40,\n\n    // 日期行的高度\n    heightOfDate: 71,\n\n    // 全部轨道\n    tracks: project.schedule.map((task) => {\n      return {\n        taskName: task.title,\n        uid: getRandomStr(),\n        childrenUID: [],\n        queue: task.queue.map((queueTask) => {\n          const uid = getRandomStr();\n          return {\n            uid,\n            title: queueTask.title || uid,\n            startTime: new Date(queueTask.startTime),\n            endTime: new Date(queueTask.endTime),\n          };\n        }),\n      };\n    }),\n    // 渲染今天日期\n    nowDate: new Date(),\n    getRandomStr,\n    getTrackByUID(uid) {\n      let track = null;\n      for (let i = 0; i < this.tracks.length; i++) {\n        if (this.tracks[i].uid == uid) {\n          track = this.tracks[i];\n        }\n      }\n      return track;\n    },\n    // 更新高度\n    updateAGHeight(height, ag, store) {\n      height = height || 0;\n      ag.setStyleSize(store.ganttWidth, height);\n      for (let i = 0; i < ag.rendererManager.children.length; i++) {\n        ag.rendererManager.children[i].setStyleSize(store.ganttWidth, height);\n        ag.rendererManager.children[i].setAttrSize(store.ganttWidth, height);\n        ag.rendererManager.children[i].reRender();\n      }\n    },\n    /**\n     * 根据 tracks 数据绘制 bars\n     * @param {*} ag\n     * @param {*} store\n     * @returns\n     */\n    updateGridTasks(ag, store) {\n      if (!store.tracks.length) return;\n\n      const projectStartDate = new Date(project.startTime);\n\n      const gridTasks = [];\n      const bars = [];\n\n      for (let trackIndex = 0; trackIndex < store.tracks.length; trackIndex++) {\n        const track = store.tracks[trackIndex];\n\n        const gridTask = new GridTask({\n          index: trackIndex,\n          heightOfSingleTask: store.heightOfSingleTask,\n        });\n        gridTasks.push(gridTask);\n\n        track.queue.forEach((queueTask) => {\n          const { startTime, endTime } = queueTask;\n\n          const startGridDayIndex = Math.round(\n            (startTime - projectStartDate) / this.millisecondOfEveryBlock\n          );\n          const endGridDayIndex = Math.round(\n            (endTime - projectStartDate) / this.millisecondOfEveryBlock - 1\n          );\n          const bar = new Bar({\n            x: startGridDayIndex * this.pixelOfEveryBlock,\n            y: trackIndex * store.heightOfSingleTask,\n            width:\n              (endGridDayIndex - startGridDayIndex + 1) *\n              this.pixelOfEveryBlock,\n            height: store.heightOfSingleTask,\n            name: queueTask.title,\n          });\n\n          bar.userData = {\n            uid: queueTask.uid,\n            isCreated: true,\n            startGridDayIndex,\n            endGridDayIndex,\n            trackIndex,\n            trackUID: track.uid,\n          };\n\n          this.refreshTimeline(ag, store);\n          bar.updateComplete(ag.renderers.now.scene.children[0].x);\n\n          bars.push(bar);\n        });\n      }\n\n      ag.renderers.gridTasks.scene.children = gridTasks;\n      ag.renderers.gridTasks.reRender();\n\n      ag.renderers.bars.scene.children = bars;\n      ag.renderers.bars.reRender();\n    },\n    initGridDays(ag, store) {\n      const gridDays = [];\n      for (let i = 0; i < store.timelineTicks.ticks.length; i++) {\n        const gridDay = new GridDay({\n          date: store.timelineTicks.ticks[i],\n          index: i,\n          pixelOfEveryBlock: store.pixelOfEveryBlock,\n        });\n        gridDays.push(gridDay);\n      }\n      ag.renderers.gridDays.scene.children = gridDays;\n      ag.renderers.gridDays.reRender();\n    },\n    refreshTimeline(ag, store) {\n      const { startTime, endTime } = project;\n      const nowDate = new Date();\n      const offsetmillisecond = nowDate - new Date(startTime);\n\n      const offsetX =\n        (offsetmillisecond / this.millisecondOfEveryBlock) *\n        this.pixelOfEveryBlock;\n\n      const now = new Now({\n        x: offsetX,\n      });\n      ag.renderers.now.scene.children = [now];\n      ag.renderers.now.reRender();\n      store.nowDate = nowDate;\n\n      ag.renderers.bars.scene.children.forEach((bar) => {\n        bar.updateComplete(offsetX);\n      });\n      ag.renderers.bars.reRender();\n    },\n    initNowTimeLine(ag, store) {\n      this.refreshTimeline(ag, store);\n      setInterval(() => {\n        this.refreshTimeline(ag, store);\n      }, 5 * 1000);\n    },\n    addTrack(index, track, ag, store) {\n      if (index < 0) index = 0;\n      store.tracks.splice(index, 0, track);\n    },\n    deleteTrack(index, count = 1, ag, store) {\n      const deletedTrackUID = store.tracks[index].uid;\n      store.tracks.splice(index, count);\n      ag.renderers.bars.scene.children =\n        ag.renderers.bars.scene.children.filter((bar) => {\n          return bar.userData.trackUID !== deletedTrackUID;\n        });\n      store.tracks.forEach((track, trackIndex) => {\n        const uid = track.uid;\n        ag.renderers.bars.scene.children.forEach((bar) => {\n          if (bar.userData.trackUID === uid) {\n            bar.userData.trackIndex = trackIndex;\n            bar.y = trackIndex * store.heightOfSingleTask;\n          }\n        });\n      });\n      ag.renderers.bars.reRender();\n    },\n    updateTaskName(index, taskName, ag, store) {\n      store.tracks[index].taskName = taskName;\n    },\n    getIndexByTaskEl(topTaskListEl, taskEl) {\n      let index = -1;\n      for (let i = 0; i < topTaskListEl.children.length; i++) {\n        index++;\n        if (topTaskListEl.children[i] == taskEl) return index;\n        const subTaskListEl = topTaskListEl.children[i].children[1];\n        for (let j = 0; j < subTaskListEl.children.length; j++) {\n          index++;\n          if (subTaskListEl.children[j] == taskEl) return index;\n        }\n      }\n    },\n    getBarsByTrackUID(ag, store, trackUID) {\n      return ag.renderers.bars.scene.children.filter((bar) => {\n        return bar.userData.trackUID === trackUID;\n      });\n    },\n    updateTaskList(ag, store) {\n      const topTaskListEl = store.AppEl.getElementsByClassName(\"task-list\")[0];\n\n      let taskCount = +topTaskListEl.dataset.taskCount;\n      let allTaskCount = +topTaskListEl.dataset.allTaskCount;\n\n      if (!allTaskCount) {\n        topTaskListEl.dataset.allTaskCount = allTaskCount = store.tracks.length;\n      }\n\n      for (let i = 0; i < store.tracks.length; i++) {\n        if (store.tracks[i].childrenUID) taskCount++;\n      }\n\n      topTaskListEl.dataset.taskCount = taskCount;\n\n      let html = ``;\n      for (let i = 0; i < store.tracks.length; i++) {\n        const track = store.tracks[i];\n\n        /**\n         * 获取该任务队列中的全部 Bar 实例\n         */\n        const bars = this.getBarsByTrackUID(ag, store, track.uid);\n\n        const queue = [];\n\n        /**\n         * 总时长\n         */\n        let trackTotalMillisecond = 0;\n\n        /**\n         * 遍历所有 Bar 实例\n         */\n        bars.forEach((bar) => {\n          const { startGridDayIndex, endGridDayIndex, uid } = bar.userData;\n\n          /**\n           * 增加任务总时长\n           */\n          trackTotalMillisecond +=\n            (endGridDayIndex - startGridDayIndex + 1) *\n            this.millisecondOfEveryBlock;\n\n          const projectStartDate = new Date(project.startTime);\n\n          queue.push({\n            startTime: new Date(\n              projectStartDate.getTime() +\n                startGridDayIndex * this.millisecondOfEveryBlock\n            ),\n            endTime: new Date(\n              projectStartDate.getTime() +\n                (endGridDayIndex + 1) * this.millisecondOfEveryBlock\n            ),\n            uid,\n            title: bar.name,\n          });\n        });\n\n        track.queue = queue;\n\n        let unit = \"\";\n        let length = 0;\n\n        switch (project.planeType) {\n          case \"day\":\n            unit = \"分钟\";\n            length = trackTotalMillisecond / 1000 / 60;\n            break;\n          case \"week\":\n            unit = \"小时\";\n            length = trackTotalMillisecond / 1000 / 60 / 60;\n            break;\n          case \"month\":\n            unit = \"小时\";\n            length = trackTotalMillisecond / 1000 / 60 / 60;\n            break;\n          case \"year\":\n            unit = \"日\";\n            length = trackTotalMillisecond / 1000 / 60 / 60 / 24;\n            break;\n        }\n\n        html += `\n        <div>\n          <div style=\"font-size:16px;color:#333;background-color:#fff;text-align:center;height:${store.heightOfSingleTask}px; display:flex;align-items: center;justify-content: center;z-index: 1;border-bottom:1px solid #ddd;padding-left:10px;\">\n            <div style=\"cursor:pointer;width:300px;white-space:nowrap;text-align:left;overflow: hidden;text-overflow: ellipsis;\" data-type=\"btn\" data-click-func=\"editTaskName\" data-is-editing>${track.taskName}</div>\n            <div style=\"color:#555;width:60px;text-align:center;\">${length}<span style=\"font-size:12px;font-weight:normal;\">${unit}</span></div>\n            <div class=\"airglass-fui-gantt-operate\">\n              <svg style=\"display:block;\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\"><path d=\"M426.666667 810.666667a85.333333 85.333333 0 1 1 170.666666 0 85.333333 85.333333 0 0 1-170.666666 0z m0-298.666667a85.333333 85.333333 0 1 1 170.666666 0 85.333333 85.333333 0 0 1-170.666666 0z m0-298.666667a85.333333 85.333333 0 1 1 170.666666 0 85.333333 85.333333 0 0 1-170.666666 0z\" fill=\"#009bff\"></path></svg>\n              <div style=\"background-color: #fff;\">\n                <div data-type=\"btn\" data-click-func=\"deleteTask\" style=\"padding: 0 5px;cursor:pointer;\" title=\"删除任务\"><svg viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" style=\"display:block;\"><path d=\"M512 938.666667C276.352 938.666667 85.333333 747.648 85.333333 512S276.352 85.333333 512 85.333333s426.666667 191.018667 426.666667 426.666667-191.018667 426.666667-426.666667 426.666667z m0-85.333334a341.333333 341.333333 0 1 0 0-682.666666 341.333333 341.333333 0 0 0 0 682.666666z m-192-384h384v85.333334h-384v-85.333334z\" fill=\"#009bff\"></path></svg></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"task-list\" style=\"\" data-task-count=\"${track.childrenUID.length}\">`;\n        html += `\n          </div>\n        </div>`;\n      }\n      topTaskListEl.innerHTML = html;\n    },\n    editQueueTaskName(oldName = \"\") {\n      return window.prompt(\"请编辑队列任务名称\", oldName);\n    },\n    toJSON() {\n      const { startTime, endTime, planeType } = project;\n      return {\n        title: project.title || \"\",\n        \"unit-width\": project[\"unit-width\"] || \"\",\n        startTime,\n        endTime,\n        planeType,\n        height: project.height || this.heightOfSingleTask,\n        schedule: store.tracks.map((track) => {\n          return {\n            title: track.taskName,\n            queue: track.queue.map((task) => {\n              return {\n                title: \"\",\n                startTime: task.startTime.toLocaleString(),\n                endTime: task.endTime.toLocaleString(),\n                title: task.title || task.uid,\n              };\n            }),\n          };\n        }),\n      };\n    },\n  };\n\n  /**\n   * 获取时间线刻度值\n   */\n  store.timelineTicks = getTimelineTicks({\n    startTime: project.startTime,\n    endTime: project.endTime,\n    type: project.planeType,\n    millisecondOfEveryTicks: store.millisecondOfEveryBlock,\n  });\n\n  store.ganttWidth =\n    store.timelineTicks.ticks.length * store.pixelOfEveryBlock + 20;\n\n  return store;\n}\n","import \"./index.scss\";\nimport initSubscriber from \"./initSubscriber\";\nimport initClick from \"./initClick\";\nimport getStore from \"./getStore\";\n\nexport function Gantt(opts) {\n  const { project } = opts;\n  // 初始化全局数据\n  const store = getStore(project);\n\n  // 初始化应用\n  const AppEl = document.createElement(\"div\");\n  store.AppEl = AppEl;\n  AppEl.classList.add(\"airglass-gantt-app-el\");\n  AppEl.style = `font-size:14px;color:#555;overflow-y:auto;padding-bottom: 20px;padding-left:${store.menuWidth}px;height:100%;`;\n  opts.el.appendChild(AppEl);\n  store.onSave = opts.onSave || function () {};\n  store.onPrint = opts.onPrint || function () {};\n\n  // 初始化左侧菜单列表\n  const MenuEl = document.createElement(\"div\");\n  MenuEl.classList.add(\"airglass-gantt-menu\");\n  MenuEl.style = `position:absolute; top:0; left:0; width:${store.menuWidth}px;box-shadow:rgba(0, 0, 0, 0.2) -1px -6px 20px 0px;z-index:1;`;\n  store.AppEl.appendChild(MenuEl);\n\n  const menuHTML = `\n  <div style=\"height:${store.heightOfDate}px;text-align:center;display: flex;align-items: center;justify-content: center;border: 1px solid #ddd;background-color:#fff;\">\n    <div data-type=\"btn\" data-click-func=\"createTask\" style=\"cursor:pointer;display:flex;align-items: center;justify-content:center; padding:8px 10px; background-color:#009bff;color:#fff; border-radius:17px; margin:10px 5px;\"><svg viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" style=\"\"><path d=\"M512 938.666667C276.352 938.666667 85.333333 747.648 85.333333 512S276.352 85.333333 512 85.333333s426.666667 191.018667 426.666667 426.666667-191.018667 426.666667-426.666667 426.666667z m0-85.333334a341.333333 341.333333 0 1 0 0-682.666666 341.333333 341.333333 0 0 0 0 682.666666z m-42.666667-384V320h85.333334V469.333333h149.333333v85.333334H554.666667v149.333333h-85.333334V554.666667H320v-85.333334H469.333333z\" fill=\"#fff\"></path></svg>&nbsp;新系列</div>\n    <div data-type=\"btn\" data-click-func=\"printProject\" style=\"cursor:pointer;display:flex;align-items: center;justify-content:center; padding:8px 10px; background-color:#009bff;color:#fff; border-radius:17px; margin:10px 5px;\"><svg viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\"><path d=\"M309.432889 696.952889\" fill=\"#fff\"></path><path d=\"M717.738667 415.274667m-22.648889 0a3.185 3.185 0 1 0 45.297778 0 3.185 3.185 0 1 0-45.297778 0Z\" fill=\"#fff\"></path><path d=\"M781.880889 302.250667l-20.16 0L761.720889 194.552889c0-39.210667-31.900444-71.111111-71.111111-71.111111L352.099556 123.441778c-39.210667 0-71.111111 31.900444-71.111111 71.111111l0 107.697778-38.869333 0c-54.897778 0-99.555556 44.657778-99.555556 99.555556L142.563556 625.848889c0 54.897778 43.804444 99.555556 97.649778 99.555556l40.768 0 0 118.264889c0 39.210667 31.900444 71.111111 71.111111 71.111111l338.510222 0c39.210667 0 71.111111-31.900444 71.111111-71.111111L761.713778 725.404444l31.409778 0c48.696889 0 88.305778-44.657778 88.305778-99.555556L881.429333 401.806222C881.436444 346.908444 836.778667 302.250667 781.880889 302.250667zM337.877333 194.552889c0-7.708444 6.513778-14.222222 14.222222-14.222222l338.510222 0c7.708444 0 14.222222 6.513778 14.222222 14.222222l0 107.697778L337.877333 302.250667 337.877333 194.552889zM704.832 843.669333c0 7.708444-6.513778 14.222222-14.222222 14.222222L352.099556 857.891556c-7.708444 0-14.222222-6.513778-14.222222-14.222222L337.877333 579.569778c0-7.708444 6.513778-14.222222 14.222222-14.222222l338.510222 0c7.708444 0 14.222222 6.513778 14.222222 14.222222L704.832 843.669333zM824.547556 625.848889c0 23.125333-14.385778 42.666667-31.416889 42.666667l-31.409778 0L761.720889 579.569778c0-39.210667-31.900444-71.111111-71.111111-71.111111L352.099556 508.458667c-39.210667 0-71.111111 31.900444-71.111111 71.111111L280.988444 668.515556l-40.768 0c-22.478222 0-40.760889-19.136-40.760889-42.666667L199.459556 401.806222c0-23.530667 19.136-42.666667 42.666667-42.666667l539.754667 0c23.530667 0 42.666667 19.136 42.666667 42.666667L824.547556 625.848889z\" fill=\"#fff\"></path><path d=\"M626.083556 685.340444 405.589333 685.340444c-11.783111 0-21.333333-9.550222-21.333333-21.333333s9.550222-21.333333 21.333333-21.333333l220.494222 0c11.783111 0 21.333333 9.550222 21.333333 21.333333S637.866667 685.340444 626.083556 685.340444z\" fill=\"#fff\"></path><path d=\"M626.083556 787.612444 405.589333 787.612444c-11.783111 0-21.333333-9.550222-21.333333-21.333333s9.550222-21.333333 21.333333-21.333333l220.494222 0c11.783111 0 21.333333 9.550222 21.333333 21.333333S637.866667 787.612444 626.083556 787.612444z\" fill=\"#fff\"></path></svg>&nbsp;打印</div>\n    <div data-type=\"btn\" data-click-func=\"saveProject\" style=\"cursor:pointer;display:flex;align-items: center;justify-content:center; padding:8px 10px; background-color:#009bff;color:#fff; border-radius:17px; margin:10px 5px;\"><svg viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"3098\" width=\"20\" height=\"20\"><path d=\"M773.696 134.812444l-509.155556 0c-69.76 0-126.520889 56.760889-126.520889 126.542222l0 501.326222c0 69.781333 56.760889 126.499556 126.520889 126.499556l509.141333 0c69.781333 0 126.520889-56.718222 126.520889-126.499556L900.202667 261.361778C900.202667 191.573333 843.441778 134.833778 773.696 134.812444zM324.437333 184.213333l389.347556 0 0 279.608889L324.437333 463.822222 324.437333 184.213333zM850.872889 762.680889c0 42.552889-34.616889 77.191111-77.169778 77.191111l-509.155556 0c-42.552889 0-77.169778-34.638222-77.169778-77.191111L187.377778 261.383111c0-42.574222 34.616889-77.169778 77.169778-77.169778l0-0.021333 10.567111 0 0 329.009778 488.007111 0 0.021333 0L763.143111 184.184889l10.567111 0c42.56 0 77.169778 34.595556 77.169778 77.169778L850.88 762.680889zM591.772444 256.832l49.329778 0 0 164.522667-49.329778 0 0-164.522667ZM591.772444 256.832\" fill=\"#fff\"></path></svg>&nbsp;导出</div>\n  </div>\n  <div class=\"task-list\" style=\"border-right: 1px solid #ddd;\" data-task-count data-all-task-count></div>`;\n\n  MenuEl.innerHTML = menuHTML;\n\n  /**\n   * 初始化可滚动的甘特图容器\n   */\n  const GanttWrapEl = document.createElement(\"div\");\n  GanttWrapEl.classList.add(\"airglass-gantt-scrolling-wrap\");\n  GanttWrapEl.style = `position: relative;width: 100%;overflow:auto;`;\n  store.AppEl.appendChild(GanttWrapEl);\n\n  /**\n   * 初始化日期列\n   */\n  const dateEl = document.createElement(\"div\");\n  dateEl.classList.add(\"airglass-gantt-date\");\n  dateEl.style = `font-size:12px;overflow:hidden;text-align:center;height:${store.heightOfDate}px;width:${store.ganttWidth}px;`;\n  GanttWrapEl.appendChild(dateEl);\n  store.formatDate = {};\n\n  let html = `<div style=\"overflow: hidden;border-top: 1px solid #eee;\">`;\n  for (let wrapName in store.timelineTicks.timeFormats) {\n    html += `<div style=\"float:left;\">\n        <div style=\"font-size:12px;border-bottom:1px solid #eee;line-height:3.8;border-right: 1px solid #eee;\">${wrapName}</div>\n        <div style=\"\">`;\n    for (let i in store.timelineTicks.timeFormats[wrapName]) {\n      const [blockName] = store.timelineTicks.timeFormats[wrapName][i];\n      html += `<div style=\"line-height:2;border-right:1px solid #eee;font-size:12px;float:left;width:${store.pixelOfEveryBlock}px;\"><div style=\"transform: translate(-50%, 0);background-color: #fff;\">${blockName}</div></div>`;\n    }\n    html += `</div></div>`;\n  }\n  html += `</div>`;\n  dateEl.innerHTML = html;\n\n  /**\n   * 初始化甘特图\n   */\n  const GanttEl = document.createElement(\"div\");\n  GanttWrapEl.appendChild(GanttEl);\n  GanttEl.classList.add(\"airglass-gantt-main\");\n  const ag = new grender.Grender({\n    element: GanttEl,\n    width: store.ganttWidth,\n    height: 1,\n    DPR: 1,\n  });\n  // 自定义方法属性，用于间接的操作ag\n  ag.renderers = {\n    gridDays: ag.addRenderer(\"gridDays\"),\n    gridTasks: ag.addRenderer(\"gridTasks\"),\n    activeGrid: ag.addRenderer(\"activeGrid\"),\n    bars: ag.addRenderer(\"bars\"),\n    drag: ag.addRenderer(\"drag\"),\n    now: ag.addRenderer(\"now\"),\n  };\n  // 渲染垂直网格线，用于间隔每一天；渲染水平网格线，用于间隔任务\n  store.initGridDays(ag, store);\n\n  store.updateGridTasks(ag, store);\n\n  store.initNowTimeLine(ag, store);\n\n  // 更新任务列表\n  store.updateTaskList(ag, store);\n\n  // 总是最后执行，渲染全部图层\n  store.updateAGHeight(\n    store.tracks.length * store.heightOfSingleTask,\n    ag,\n    store\n  );\n  // 初始化订阅\n  initSubscriber(store, ag);\n  // 初始化点击事件委托\n  initClick(store, ag)(store.AppEl);\n\n  {\n    const [now] = ag.renderers.now.scene.children;\n    if (now.x > 0 || GanttWrapEl.scrollWidth > now.x) {\n      const timelineX = Math.round(now.x);\n      const ganttViewportWidth = window.innerWidth - store.menuWidth;\n      GanttWrapEl.scrollLeft = timelineX - Math.round(ganttViewportWidth / 2);\n    }\n  }\n\n  return {\n    version: \"1.0.0\",\n    author: \"shuaihuajun<lanserdi@163.com>\",\n    destroy: function () {},\n  };\n}\n","import Bar from \"./renderable/Bar\";\nimport Drag from \"./renderable/Drag\";\n\nexport default function (store, ag) {\n  const subscribers = [];\n\n  // 创建一个条状图\n  subscribers.push(function () {\n    // TouchStart时命中的日期\n    let gridDayWhenTouchStart;\n    // TouchStart时命中的任务\n    let gridTaskWhenTouchStart;\n    // 新创建的Bar实例\n    let drawingBar;\n    // TouchStart时命中的Bar\n    let selectedBar;\n    // 是否移动过\n    let isMoved = false;\n    // 上一次TouchStart或TouchMove时命中的日期\n    let lastGridDay;\n    // 是否阻塞\n    let isBlocked = false;\n    return function (event, originEvent) {\n      if (event.type == \"touchstart\") {\n        touchstart: {\n          gridDayWhenTouchStart =\n            ag.renderers.gridDays.getElementsContainPoint(event)[0];\n          gridTaskWhenTouchStart =\n            ag.renderers.gridTasks.getElementsContainPoint(event)[0];\n          const track = store.tracks[gridTaskWhenTouchStart.index];\n\n          selectedBar = ag.renderers.bars.getElementsContainPoint(event)[0];\n\n          // 如果在此处命中了一个Bar，就不要创建新的Bar\n          if (selectedBar) break touchstart;\n\n          // 新的Bar实例\n          drawingBar = new Bar({\n            x:\n              gridDayWhenTouchStart.index *\n              gridDayWhenTouchStart.pixelOfEveryBlock,\n            y:\n              gridTaskWhenTouchStart.index *\n              gridTaskWhenTouchStart.heightOfSingleTask,\n            width: gridDayWhenTouchStart.pixelOfEveryBlock,\n            height: gridTaskWhenTouchStart.heightOfSingleTask,\n            name: store.getRandomStr(),\n          });\n          drawingBar.updateComplete(ag.renderers.now.scene.children[0].x);\n          drawingBar.userData = {\n            uid: store.getRandomStr(),\n            isCreated: false,\n            startGridDayIndex: gridDayWhenTouchStart.index,\n            endGridDayIndex: gridDayWhenTouchStart.index,\n            trackIndex: gridTaskWhenTouchStart.index,\n            trackUID: store.tracks[gridTaskWhenTouchStart.index].uid,\n          };\n          ag.renderers.bars.scene.add(drawingBar);\n          ag.renderers.bars.reRender();\n          store.updateTaskList(ag, store);\n          lastGridDay = gridDayWhenTouchStart;\n        }\n      }\n\n      if (event.type == \"touchmove\") {\n        mousemove: {\n          if (isBlocked) break mousemove;\n          const gridDay =\n            ag.renderers.gridDays.getElementsContainPoint(event)[0];\n          if (drawingBar && gridDay) {\n            if (gridDay.index >= drawingBar.userData.startGridDayIndex) {\n              drawingBar.width =\n                (gridDay.index - drawingBar.userData.startGridDayIndex + 1) *\n                gridDay.pixelOfEveryBlock;\n              drawingBar.userData.endGridDayIndex = gridDay.index;\n            } else {\n              for (\n                let i = 0;\n                i < ag.renderers.bars.scene.children.length;\n                i++\n              ) {\n                if (ag.renderers.bars.scene.children[i] == drawingBar) {\n                  drawingBar = null;\n                  ag.renderers.bars.scene.children.splice(i, 1);\n                  isBlocked = true;\n                }\n              }\n            }\n            isMoved = true;\n            if (lastGridDay.index != gridDay.index) {\n              ag.renderers.bars.reRender();\n              store.updateTaskList(ag, store);\n              lastGridDay = gridDay;\n            }\n          }\n        }\n      }\n\n      if (event.type == \"touchend\") {\n        mousemove: {\n          if (drawingBar) {\n            drawingBar.userData.isCreated = true;\n            if (!isMoved) {\n              store.updateTaskList(ag, store);\n            }\n          }\n          drawingBar = null;\n          gridDayWhenTouchStart = null;\n          gridTaskWhenTouchStart = null;\n          isMoved = false;\n          lastGridDay = null;\n          isBlocked = false;\n        }\n      }\n    };\n  });\n\n  /**\n   * 控制拖拽条状图 和 起止日期\n   */\n  subscribers.push(function () {\n    // TouchStart时命中的日期\n    let gridDayWhenTouchStart;\n    // TouchStart时命中的任务\n    let gridTaskWhenTouchStart;\n    // 已选中的Bar实例\n    let selectedBar;\n    // 已选中的Bar实例的开始日期的垂直网格索引\n    let selectedBarStartIndex;\n    // 上一次TouchStart或TouchMove时命中的日期\n    let lastGridDay;\n    // 已选中的Drag实例\n    let selectDrag;\n    return function (event, originEvent) {\n      if (event.type == \"touchstart\") {\n        touchstart: {\n          lastGridDay = gridDayWhenTouchStart =\n            ag.renderers.gridDays.getElementsContainPoint(event)[0];\n          gridTaskWhenTouchStart =\n            ag.renderers.gridTasks.getElementsContainPoint(event)[0];\n\n          const allSelectDrag =\n            ag.renderers.drag.getElementsContainPoint(event);\n          selectDrag = allSelectDrag[allSelectDrag.length - 1];\n          if (selectDrag) break touchstart;\n\n          selectedBar = ag.renderers.bars.getElementsContainPoint(event)[0];\n          if (!selectedBar) break touchstart;\n          if (!selectedBar.userData.isCreated) break touchstart;\n          selectedBarStartIndex = selectedBar.userData.startGridDayIndex;\n        }\n      }\n\n      /**\n       * 移动 Bar\n       */\n      if (event.type == \"touchmove\") {\n        touchmove: {\n          if (!selectedBar) break touchmove;\n          if (!selectedBar.userData.isCreated) break touchmove;\n\n          const gridDay =\n            ag.renderers.gridDays.getElementsContainPoint(event)[0];\n          if (\n            gridDay &&\n            gridDayWhenTouchStart &&\n            selectedBarStartIndex !== null\n          ) {\n            if (lastGridDay.index != gridDay.index) {\n              const startGridDayIndex =\n                selectedBarStartIndex +\n                gridDay.index -\n                gridDayWhenTouchStart.index;\n              const endGridDayIndex =\n                startGridDayIndex +\n                (selectedBar.userData.endGridDayIndex -\n                  selectedBar.userData.startGridDayIndex);\n\n              const startDateGrid =\n                ag.renderers.gridDays.scene.children[startGridDayIndex];\n              const endDateGrid =\n                ag.renderers.gridDays.scene.children[endGridDayIndex];\n\n              if (!startDateGrid) break touchmove;\n              if (!endDateGrid) break touchmove;\n\n              selectedBar.userData.startGridDayIndex = startGridDayIndex;\n              selectedBar.userData.endGridDayIndex = endGridDayIndex;\n              selectedBar.x =\n                selectedBar.userData.startGridDayIndex *\n                gridDayWhenTouchStart.pixelOfEveryBlock;\n              selectedBar.updateComplete(ag.renderers.now.scene.children[0].x);\n              ag.renderers.bars.reRender();\n              store.updateTaskList(ag, store);\n              lastGridDay = gridDay;\n\n              ag.renderers.drag.reRender();\n            }\n          }\n        }\n      }\n\n      /**\n       * 改变长度\n       */\n      if (event.type == \"touchmove\") {\n        touchmove: {\n          if (!selectDrag) break touchmove;\n\n          const gridDay =\n            ag.renderers.gridDays.getElementsContainPoint(event)[0];\n          if (gridDay && gridDayWhenTouchStart) {\n            if (lastGridDay.index != gridDay.index) {\n              if (selectDrag.userData.type == \"start\") {\n                const bar = selectDrag.userData.bar;\n                const startDateGrid = gridDay;\n                const endDateGrid =\n                  ag.renderers.gridDays.scene.children[\n                    bar.userData.endGridDayIndex\n                  ];\n\n                if (startDateGrid.index > bar.userData.endGridDayIndex)\n                  break touchmove;\n\n                bar.x = startDateGrid.index * store.pixelOfEveryBlock;\n                bar.width =\n                  (endDateGrid.index - gridDay.index + 1) *\n                  store.pixelOfEveryBlock;\n\n                bar.userData.startGridDayIndex = startDateGrid.index;\n                bar.updateComplete(ag.renderers.now.scene.children[0].x);\n                ag.renderers.bars.reRender();\n                store.updateTaskList(ag, store);\n                selectDrag.x =\n                  bar.userData.startGridDayIndex * store.pixelOfEveryBlock +\n                  store.pixelOfEveryBlock / 2;\n                ag.renderers.drag.reRender();\n              }\n              if (selectDrag.userData.type == \"end\") {\n                const bar = selectDrag.userData.bar;\n                const startDateGrid =\n                  ag.renderers.gridDays.scene.children[\n                    bar.userData.startGridDayIndex\n                  ];\n                const endDateGrid = gridDay;\n                \n                if (startDateGrid.index > endDateGrid.index) {\n                  break touchmove;\n                }\n\n                bar.width =\n                  (gridDay.index - startDateGrid.index + 1) *\n                  store.pixelOfEveryBlock;\n                bar.userData.endGridDayIndex = gridDay.index;\n                bar.updateComplete(ag.renderers.now.scene.children[0].x);\n                ag.renderers.bars.reRender();\n                store.updateTaskList(ag, store);\n                selectDrag.x =\n                  bar.userData.endGridDayIndex * store.pixelOfEveryBlock +\n                  store.pixelOfEveryBlock / 2;\n                ag.renderers.drag.reRender();\n              }\n              lastGridDay = gridDay;\n            }\n          }\n        }\n      }\n\n      if (event.type == \"touchend\") {\n        mousemove: {\n          if (selectedBar) {\n            const oldName = selectedBar.name;\n            const newName = store.editQueueTaskName(oldName);\n            selectedBar.name = newName || oldName;\n            ag.renderers.bars.reRender();\n            store.updateTaskList(ag, store);\n          }\n          selectedBar = null;\n          gridDayWhenTouchStart = null;\n          gridTaskWhenTouchStart = null;\n          selectedBarStartIndex = null;\n          lastGridDay = null;\n          selectDrag = null;\n        }\n      }\n    };\n  });\n\n  /**\n   * 拖拽控件\n   */\n  subscribers.push(function () {\n    return function (event, originEvent) {\n      if (event.type == \"mousemove\" || event.type == \"touchmove\") {\n        mousemove: {\n          const bar = ag.renderers.bars.getElementsContainPoint(event)[0];\n          if (bar) {\n            const dragSize = parseInt(bar.height * 0.2);\n            const startDrag = new Drag({\n              x:\n                bar.userData.startGridDayIndex * store.pixelOfEveryBlock +\n                store.pixelOfEveryBlock / 2,\n              y:\n                bar.userData.trackIndex * store.heightOfSingleTask +\n                store.heightOfSingleTask / 2,\n              size: dragSize,\n              color: bar.borderColor,\n              dir: \"left\",\n            });\n            startDrag.userData = {\n              type: \"start\",\n              bar,\n            };\n\n            const endDrag = new Drag({\n              x:\n                bar.userData.endGridDayIndex * store.pixelOfEveryBlock +\n                store.pixelOfEveryBlock / 2,\n              y:\n                bar.userData.trackIndex * store.heightOfSingleTask +\n                store.heightOfSingleTask / 2,\n              size: dragSize,\n              color: bar.borderColor,\n              dir: \"right\",\n            });\n            endDrag.userData = {\n              type: \"end\",\n              bar,\n            };\n            ag.renderers.drag.scene.children = [startDrag, endDrag];\n          } else {\n            ag.renderers.drag.scene.children = [];\n          }\n          ag.renderers.drag.reRender();\n        }\n      }\n      if (event.type == \"mouseout\") {\n        ag.renderers.drag.scene.children = [];\n        ag.renderers.drag.reRender();\n      }\n    };\n  });\n\n  subscribers.forEach((getSubscriber) => {\n    ag.subscribe(getSubscriber());\n  });\n}\n","export default function (store, ag) {\n  const funcList = {\n    createTask(el, event) {\n      const uid = store.getRandomStr();\n      const taskName = uid;\n      const wrapEl = el.parentNode.parentNode;\n      const topTaskListEl = wrapEl.getElementsByClassName(\"task-list\")[0];\n      const taskCount = +topTaskListEl.dataset.taskCount;\n      const allTaskCount = +topTaskListEl.dataset.allTaskCount;\n      topTaskListEl.innerHTML += `<div>\n        <div style=\"font-size:16px;color:#333;background-color:#fff;text-align:center;height:${store.heightOfSingleTask}px; display:flex;align-items: center;justify-content: center;z-index: 1;border-bottom:1px solid #ddd;padding-left:10px;\">\n          <div style=\"cursor:pointer;width:300px;white-space:nowrap;text-align:left;overflow: hidden;text-overflow: ellipsis;\" data-type=\"btn\" data-click-func=\"editTaskName\" data-is-editing>${taskName}</div>\n          <div style=\"color:#555;width:60px;text-align:center;\">0<span style=\"font-size:12px;font-weight:normal;\"></span></div>\n          <div class=\"airglass-fui-gantt-operate\">\n            <svg style=\"display:block;\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\"><path d=\"M426.666667 810.666667a85.333333 85.333333 0 1 1 170.666666 0 85.333333 85.333333 0 0 1-170.666666 0z m0-298.666667a85.333333 85.333333 0 1 1 170.666666 0 85.333333 85.333333 0 0 1-170.666666 0z m0-298.666667a85.333333 85.333333 0 1 1 170.666666 0 85.333333 85.333333 0 0 1-170.666666 0z\" fill=\"#009bff\"></path></svg>\n            <div style=\"background-color: #fff;\">\n              <div data-type=\"btn\" data-click-func=\"deleteTask\" style=\"padding: 0 5px;cursor:pointer;\" title=\"删除任务\"><svg viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" style=\"display:block;\"><path d=\"M512 938.666667C276.352 938.666667 85.333333 747.648 85.333333 512S276.352 85.333333 512 85.333333s426.666667 191.018667 426.666667 426.666667-191.018667 426.666667-426.666667 426.666667z m0-85.333334a341.333333 341.333333 0 1 0 0-682.666666 341.333333 341.333333 0 0 0 0 682.666666z m-192-384h384v85.333334h-384v-85.333334z\" fill=\"#009bff\"></path></svg></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"task-list\" style=\"\" data-task-count></div>\n      </div>`;\n      store.addTrack(\n        store.tracks.length,\n        {\n          uid: uid,\n          taskName: taskName,\n          childrenUID: [],\n          queue: [],\n        },\n        ag,\n        store\n      );\n\n      topTaskListEl.dataset.taskCount = taskCount + 1;\n      // 更新全部任务（包括子任务）的数量\n      topTaskListEl.dataset.allTaskCount = allTaskCount + 1;\n      // 更新甘特图高度\n      store.updateAGHeight(\n        (allTaskCount + 1) * store.heightOfSingleTask,\n        ag,\n        store\n      );\n      // 更新任务网格\n      store.updateGridTasks(ag, store);\n\n      return false;\n    },\n    deleteTask(el, event) {\n      const taskEl = el.parentNode.parentNode.parentNode.parentNode;\n      const topTaskListEl = taskEl.parentNode;\n      const subTaskListEl = taskEl.getElementsByClassName(\"task-list\")[0];\n      const subTaskCount = +subTaskListEl.dataset.taskCount;\n      store.deleteTrack(\n        store.getIndexByTaskEl(topTaskListEl, taskEl),\n        subTaskCount + 1,\n        ag,\n        store\n      );\n      topTaskListEl.removeChild(taskEl);\n      const taskCount = +topTaskListEl.dataset.taskCount;\n      const allTaskCount = +topTaskListEl.dataset.allTaskCount;\n      topTaskListEl.dataset.taskCount = taskCount - 1;\n      topTaskListEl.dataset.allTaskCount = allTaskCount - 1 - subTaskCount;\n      // 更新甘特图高度\n      store.updateAGHeight(\n        (allTaskCount - 1 - subTaskCount) * store.heightOfSingleTask,\n        ag,\n        store\n      );\n      // 更新任务网格\n      store.updateGridTasks(ag, store);\n\n      return false;\n    },\n    createSubTask(el, event) {\n      const uid = store.getRandomStr();\n      const taskName = \"随机任务：\" + uid;\n      const days = 0;\n      const parentTaskEl = el.parentNode.parentNode.parentNode.parentNode;\n      const TaskListEl =\n        el.parentNode.parentNode.parentNode.parentNode.getElementsByClassName(\n          \"task-list\"\n        )[0];\n      const topTaskListEl = TaskListEl.parentNode.parentNode;\n      const taskCount = +TaskListEl.dataset.taskCount;\n      const allTaskCount = +topTaskListEl.dataset.allTaskCount;\n      TaskListEl.innerHTML += `<div style=\"font-size:14px;color:#555;border-bottom:1px solid #d4e3ec;background-color:#f0f8ff;height:${store.heightOfSingleTask}px;\">\n        <div style=\"height:${store.heightOfSingleTask}px;text-align:center;display:flex;align-items: center;justify-content: center;padding-left: 10px;\">\n          <div style=\"width:180px;white-space: nowrap;text-align:left;overflow: hidden;text-overflow: ellipsis;\" data-type=\"btn\" data-click-func=\"editTaskName\" data-is-editing>${taskName}</div>\n          <div style=\"color:#555;width:60px;text-align:center;\">${days}<span style=\"font-size:12px;font-weight:normal;\">分钟</span></div>\n          <div class=\"airglass-fui-gantt-operate\">\n            <svg style=\"display:block;\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\"><path d=\"M426.666667 810.666667a85.333333 85.333333 0 1 1 170.666666 0 85.333333 85.333333 0 0 1-170.666666 0z m0-298.666667a85.333333 85.333333 0 1 1 170.666666 0 85.333333 85.333333 0 0 1-170.666666 0z m0-298.666667a85.333333 85.333333 0 1 1 170.666666 0 85.333333 85.333333 0 0 1-170.666666 0z\" fill=\"#009bff\"></path></svg>\n            <div style=\"background-color: #f0f8ff;\">\n              <div data-type=\"btn\" data-click-func=\"deleteSubTask\" style=\"padding:0 5px;cursor:pointer;\" title=\"删除任务\"><svg viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" style=\"display:block;\"><path d=\"M512 938.666667C276.352 938.666667 85.333333 747.648 85.333333 512S276.352 85.333333 512 85.333333s426.666667 191.018667 426.666667 426.666667-191.018667 426.666667-426.666667 426.666667z m0-85.333334a341.333333 341.333333 0 1 0 0-682.666666 341.333333 341.333333 0 0 0 0 682.666666z m-192-384h384v85.333334h-384v-85.333334z\" fill=\"#009bff\"></path></svg></div>\n            </div>\n          </div>\n        </div>\n      </div>`;\n      const parentTaskElIndex = store.getIndexByTaskEl(\n        topTaskListEl,\n        parentTaskEl\n      );\n      store.tracks[parentTaskElIndex].childrenUID.push(uid);\n      const lastTaskEl = TaskListEl.children[TaskListEl.children.length - 1];\n      store.addTrack(\n        store.getIndexByTaskEl(topTaskListEl, lastTaskEl),\n        {\n          uid: uid,\n          taskName: taskName,\n        },\n        ag,\n        store\n      );\n      TaskListEl.dataset.taskCount = taskCount + 1;\n      topTaskListEl.dataset.allTaskCount = allTaskCount + 1;\n      // 更新甘特图高度\n      store.updateAGHeight(\n        (allTaskCount + 1) * store.heightOfSingleTask,\n        ag,\n        store\n      );\n      // 更新任务网格\n      store.updateGridTasks(ag, store);\n      return false;\n    },\n    deleteSubTask(el, event) {\n      const taskEl = el.parentNode.parentNode.parentNode.parentNode;\n      const taskListEl = taskEl.parentNode;\n      const topTaskListEl = taskListEl.parentNode.parentNode;\n      const taskCount = +taskListEl.dataset.taskCount;\n      const allTaskCount = +topTaskListEl.dataset.allTaskCount;\n      const parentTaskIndex = store.getIndexByTaskEl(\n        topTaskListEl,\n        taskListEl.parentNode\n      );\n      const taskIndex = store.getIndexByTaskEl(topTaskListEl, taskEl);\n      for (\n        let i = 0;\n        i < store.tracks[parentTaskIndex].childrenUID.length;\n        i++\n      ) {\n        const uid = store.tracks[parentTaskIndex].childrenUID[i];\n        if (uid == store.tracks[taskIndex].uid) {\n          store.tracks[parentTaskIndex].childrenUID.splice(i, 1);\n        }\n      }\n      store.deleteTrack(taskIndex, 1, ag, store);\n      taskListEl.removeChild(taskEl);\n      taskListEl.dataset.taskCount = taskCount - 1;\n      topTaskListEl.dataset.allTaskCount = allTaskCount - 1;\n      // 更新甘特图高度\n      store.updateAGHeight(\n        (allTaskCount - 1) * store.heightOfSingleTask,\n        ag,\n        store\n      );\n      // 更新任务网格\n      store.updateGridTasks(ag, store);\n      return false;\n    },\n    editTaskName(el, event) {\n      const originTaskName = el.innerText;\n      const taskName =\n        window.prompt(\"请编辑任务名称\", el.innerText) || originTaskName;\n      const topTaskListEl = store.AppEl.getElementsByClassName(\"task-list\")[0];\n      const taskEl = el.parentNode.parentNode;\n      const taskIndex = store.getIndexByTaskEl(topTaskListEl, taskEl);\n      store.updateTaskName(taskIndex, taskName, ag, store);\n      el.innerText = taskName;\n    },\n    printProject(el, event) {\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      canvas.width = ag.renderers.bars.element.width;\n      canvas.height = ag.renderers.bars.element.height;\n      ctx.fillStyle = \"#fff\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(ag.renderers.gridDays.element, 0, 0);\n      ctx.drawImage(ag.renderers.gridTasks.element, 0, 0);\n      ctx.drawImage(ag.renderers.bars.element, 0, 0);\n\n      if (ag.renderers.now) {\n        ctx.drawImage(ag.renderers.now.element, 0, 0);\n      }\n\n      const aEl = document.createElement(\"a\");\n      aEl.setAttribute(\"href\", canvas.toDataURL());\n      aEl.setAttribute(\"download\", Date.now() + \".png\");\n      aEl.click();\n\n      const img = new Image();\n      store.onPrint(img);\n    },\n    saveProject(el, event) {\n      store.onSave(store.toJSON());\n    },\n  };\n  return function (el) {\n    el.addEventListener(\"click\", function (e) {\n      let target = e.target;\n      while (this !== target) {\n        if (!target) return;\n        const type = target.dataset.type;\n        const func = target.dataset.clickFunc;\n        if (type == \"btn\" && func && funcList[func]) {\n          if (funcList[func](target, e) === false) break;\n        }\n        target = target.parentNode;\n      }\n    });\n  };\n}\n"],"sourceRoot":""}